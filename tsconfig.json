{
  "compilerOptions": {
    "target": "esnext",
    "module": "esnext",
    "moduleResolution": "bundler",

    "noEmit": true,
    "esModuleInterop": true,

    "forceConsistentCasingInFileNames": true,

    "strict": true,
    "noImplicitAny": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true,
    "strictBindCallApply": true,
    "strictPropertyInitialization": true,
    "noImplicitOverride": true,

    "skipLibCheck": true,

    "paths": {
      // 이것이 path alias입니다.

      // 만일 단일 경로를 원한다면 이런 식으로 사용하면 됩니다.
      "@magic": ["./src/stuffs/04/magic"],

      // 하지만 만일 subpath를 포함하고 싶다면 이런 식으로 asterisk를 사용해야 합니다.
      // 놀랍게도, 이것은 prefix를 사용할 때에만 쓸 수 있는 것은 아닙니다.
      // 경우에 따라서는 * 뒤에 추가적인 postfix를 지정해 줄 수도 있습니다.
      // prefix를 사용하지 않는 것은 실질적으로는 의미가 없습니다. 왜냐하면 path alias의 resolve 경로는 tsconfig.json의 상대경로여야 하기 때문입니다.
      "@magic/*": [
        "./src/stuffs/04/magic/*",
        // 복수의 경로를 지정할 수도 있습니다. 이것은 마치 fallback처럼 작동합니다.
        "./other/magical/places/*"
      ],
      "augmentation": ["./ext/augmentation"]
    }
  },

  "include": ["src"],
  "references": [{ "path": "./ext/tsconfig.json" }]
}
